{"ast":null,"code":"import { map, BehaviorSubject, catchError, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CurrenciesService = /*#__PURE__*/(() => {\n  class CurrenciesService {\n    constructor(http) {\n      this.http = http;\n      this.currencyDetail$ = new BehaviorSubject(null);\n      this.selectedCurrency$ = new BehaviorSubject('');\n    }\n\n    getCurrencies() {\n      return this.http.get(\"assets/data/currencies.json\").pipe(map(({\n        currencies\n      }) => currencies));\n    }\n\n    getCurrencyDetail(currency) {\n      this.http.get(`assets/data/${currency.code.toLowerCase()}.json`).pipe(map(({\n        rates\n      }) => rates), catchError(_ => of([]))).subscribe(data => {\n        this.currencyDetail$.next({\n          currency: currency,\n          rates: data\n        });\n      });\n    }\n\n  }\n\n  CurrenciesService.ɵfac = function CurrenciesService_Factory(t) {\n    return new (t || CurrenciesService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CurrenciesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CurrenciesService,\n    factory: CurrenciesService.ɵfac,\n    providedIn: 'root'\n  });\n  return CurrenciesService;\n})();","map":null,"metadata":{},"sourceType":"module"}